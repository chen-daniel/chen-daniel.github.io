{"version":3,"sources":["routes/Home/Home.component.js","routes/About/About.component.js","routes/Resume/Resume.component.js","routes/Projects/Projects.component.js","routes/Photography/Photography.component.js","routes/Router.js","common-components/Navbar/navbar.component.js","serviceWorker.js","index.js","App.js"],"names":["Home_component","react_default","a","createElement","className","id","alt","href","About_component","Resume_component","src","Projects_component","Link","to","Photography_component","routes_Router","HashRouter","Switch","Route","exact","path","component","Home","About","Resume","Projects","Photography","Navbar","s","document","type","async","body","appendChild","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","navbar_component","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b94394df.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Home.css';\n\nexport default () => (\n  <section className=\"home-page\" id=\"main\">\n    <header>\n      <span className=\"avatar\">\n        <img alt=\"\" id=\"home-img\" />\n      </span>\n      <h1>Daniel Chen</h1>\n      <h2>Northeastern University Student</h2>\n      <p>\n        Computer Science Major\n        <br />\n        Entrepreneurship Minor\n      </p>\n    </header>\n\n    <footer>\n      <ul className=\"icons\">\n        <li>\n          <a href=\"https://www.github.com/chen-daniel/\" className=\"fa-github\">\n            GitHub\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://www.linkedin.com/in/dchen7321/\"\n            className=\"fa-linkedin\"\n          >\n            LinkedIn\n          </a>\n        </li>\n        <li>\n          <a\n            href=\"https://www.instagram.com/dchenfotografeez/\"\n            className=\"fa-instagram\"\n          >\n            Instagram\n          </a>\n        </li>\n        <li>\n          <a href=\"https://www.facebook.com/dchen7321/\" className=\"fa-facebook\">\n            Facebook\n          </a>\n        </li>\n      </ul>\n    </footer>\n  </section>\n);\n","import React from 'react';\n\nimport './About.css';\n\nexport default () => (\n  <section className=\"about-page\" id=\"main\">\n    <header>\n      <span className=\"avatar\">\n        <img alt=\"\" id=\"about-img\" />\n      </span>\n    </header>\n    <p>\n      Hi! My name is Daniel and I'm currently a Computer Science student at\n      Northeastern University with a minor in Entrepreneurship. I was born in\n      Canada, grew up in Hong Kong, and studied for a year in Canada before\n      moving to Boston. Coding has been a passion of mine since I attended my\n      first university lecture. Since then I've had the opportunity to\n      continuously grow and develop in the field. My specialties at the moment\n      are in full-stack web development. Through classes, hackathons, and work,\n      I've been given exposure to a myriad of web technologies and frameworks.\n      <br />\n      <br />\n      Most recently I was employed as a Software Developer Co-op at Circle. At\n      this position, I have had the opportunity to work with an extremely\n      experienced and talented team of developers who have all helped me improve\n      as both a developer and a member of a team.\n      <br />\n      <br />\n      Outside of Visual Studio Code, I also enjoy photography (Former Canon user\n      converted to Sony), film, keeping up with tech news, gaming (Xbox FTW),\n      basketball (Go Lebron), and hip-hop dance (WOO Kinjaz).\n    </p>\n  </section>\n);\n","import React from 'react';\n\nimport './Resume.css';\n\nexport default () => (\n  <section className=\"resume-page\" id=\"main\">\n    <embed\n      src=\"assets/files/Resume.pdf#view=FitH\"\n      alt=\"pdf\"\n      className=\"resume-pdf\"\n    />\n  </section>\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => (\n  <div>\n    Bye\n    <br />\n    <Link to=\"/\">Go to Page1</Link>\n  </div>\n);","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => (\n  <div>\n    Bye\n    <br />\n    <Link to=\"/\">Go to Page1</Link>\n  </div>\n);","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport './Router.css';\nimport Home from './Home/Home.component';\nimport About from './About/About.component';\nimport Resume from './Resume/Resume.component';\nimport Projects from './Projects/Projects.component';\nimport Photography from './Photography/Photography.component';\n\nexport default () => (\n  <HashRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/about\" component={About} />\n      <Route exact path=\"/resume\" component={Resume} />\n      <Route exact path=\"/projects\" component={Projects} />\n      <Route exact path=\"/photography\" component={Photography} />\n    </Switch>\n  </HashRouter>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport './navbar.css';\n\nclass Navbar extends React.Component {\n  componentDidMount() {\n    let s = document.createElement('script');\n    s.src = 'assets/js/main.js';\n    s.type = 'text/javascript';\n    s.async = true;\n    document.body.appendChild(s);\n  }\n\n  render() {\n    return (\n      <HashRouter>\n        <nav id=\"nav\">\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/resume\">Resume</Link>\n            </li>\n            <li>\n              <Link to=\"/projects\">Projects</Link>\n            </li>\n            <li>\n              <Link to=\"/photography\">Photography</Link>\n              <ul>\n                <li>\n                  <Link to=\"/photography/portrait\">Portrait</Link>\n                </li>\n                <li>\n                  <Link to=\"/photography/street_urban\">Street/Urban</Link>\n                </li>\n                <li>\n                  <Link to=\"/photography/landscape\">Landscape</Link>\n                </li>\n                <li>\n                  <Link to=\"/photography/event\">Event</Link>\n                </li>\n                <li>\n                  <Link to=\"/photography/cosplay\">Cosplay</Link>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </nav>\n      </HashRouter>\n    );\n  }\n}\n\nexport default Navbar;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\n\nimport Router from './routes/Router';\nimport Navbar from './common-components/Navbar/navbar.component';\n\nimport './App.css';\n\nexport default () => (\n  <div id=\"wrapper\">\n    <Navbar />\n    <div id=\"content\">\n      <Router />\n    </div>\n    <footer id=\"footer\">\n      <ul className=\"copyright\">\n        <li>&copy; Daniel Chen</li>\n      </ul>\n    </footer>\n  </div>\n);\n"],"sourceRoot":""}